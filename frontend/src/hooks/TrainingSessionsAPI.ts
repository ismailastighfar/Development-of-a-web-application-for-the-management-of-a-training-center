import API from "../API";

export interface TrainingSessionData {
    id: number;
    name: string;
    description: string;
    trainingSessionDate: string;
    StartTime : string;
    EndTime : string;
    IsAllDay : boolean;
    trainingId: number;
    IsNew: boolean;
}


// Generated by https://quicktype.io

export interface TrainingSessionRequest {
    id:               number;
    name:             string;
    description:      string;
    sessionDate:      string;
    sessionStartTime: string;
    sessionEndTime:   string;
    duration:         number;
    trainingId:       number;
}




//General Header
const headers = {
    'Content-Type': 'application/json', // Example header, adjust as needed
};

//Create Training sessions
export const SaveTrainingSessions = (trainingSessionRequest: TrainingSessionRequest) => {
    return API.post("/trainingSession", trainingSessionRequest , {headers})
        .then((res) => res)
        .catch((error) => {
            const errorMessage: string = error.response.data?.message || "Conflict error occurred.";
            throw new Error(errorMessage);        
        });
};

export const UpdateTrainingSessions = (trainingSessionRequest: TrainingSessionRequest) => {
    return API.put(`/trainingSession/${trainingSessionRequest.id}`, trainingSessionRequest , {headers})
        .then((res) => res)
        .catch((error) => {
            const errorMessage: string = error.response.data?.message || "Conflict error occurred.";
            throw new Error(errorMessage);        
        });
}

// Save Training sessions list
export const SaveTrainingSessionsList = (trainingSessionData: TrainingSessionData[]) => {
    trainingSessionData.forEach((trainingSession , index) => {
        try {
            const trainingSessionRequest = SetTrainingSessionsRequest(trainingSession);
            if(trainingSession.IsNew)
                SaveTrainingSessions(trainingSessionRequest);
            else
                UpdateTrainingSessions(trainingSessionRequest);
        }
        catch(error) {
            throw new Error(`Error occurred while saving training sessions ${index + 1}`);
        }
    })
};


//Set Training sessions Request
export const SetTrainingSessionsRequest = (trainingSessionData: TrainingSessionData) => {
    
    const trainingSessionRequest: TrainingSessionRequest = {
        id: trainingSessionData.id,
        name: trainingSessionData.name,
        description: trainingSessionData.description,
        sessionDate: trainingSessionData.trainingSessionDate,
        sessionStartTime: trainingSessionData.StartTime,
        sessionEndTime: trainingSessionData.EndTime,
        duration: 0,
        trainingId: trainingSessionData.trainingId
    }
    console.log(trainingSessionRequest);
    return trainingSessionRequest;
}


//Get Training sessions
export const GetTrainingSessionsByTraining = (trainingId: number) => {

    return API.get(`/trainingSession/${trainingId}/training`)
        .then((res) => res)
        .catch((error) => {
            const errorMessage: string = error.response.data?.message || "Conflict error occurred.";
            throw new Error(errorMessage);        
        });
};
